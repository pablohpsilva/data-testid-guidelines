"use client";

import { useState } from "react";
import { UserCard } from "../components/UserCard";
import { ProductCard } from "../components/ProductCard";
import { Navigation } from "../components/Navigation";

// Notice: NO manual data-testid attributes!
// All test IDs will be automatically generated by our plugin

export default function HomePage() {
  const [activeTab, setActiveTab] = useState("users");

  const sampleUsers = [
    {
      id: 1,
      name: "John Doe",
      email: "john@example.com",
      role: "Admin",
      avatar: "üë®‚Äçüíº",
    },
    {
      id: 2,
      name: "Jane Smith",
      email: "jane@example.com",
      role: "User",
      avatar: "üë©‚Äçüíª",
    },
  ];

  const sampleProducts = [
    {
      id: 1,
      name: "Wireless Headphones",
      price: 99.99,
      description: "High-quality wireless headphones with noise cancellation",
      inStock: true,
    },
    {
      id: 2,
      name: "Smart Watch",
      price: 249.99,
      description: "Advanced smartwatch with health monitoring features",
      inStock: false,
    },
  ];

  return (
    <div className="container">
      <header>
        <h1>Auto TestId Next.js Demo</h1>
        <div className="alert">
          <strong>Notice:</strong> All data-testid attributes are automatically
          generated! Open DevTools to inspect the generated test IDs.
        </div>
      </header>

      <Navigation activeTab={activeTab} onTabChange={setActiveTab} />

      <main>
        {activeTab === "users" && (
          <section>
            <h2>User Management</h2>
            <p>
              These user cards demonstrate automatic test ID generation in
              Next.js.
            </p>
            <div className="grid">
              {sampleUsers.map((user, index) => (
                <UserCard key={user.id} user={user} />
              ))}
            </div>
          </section>
        )}

        {activeTab === "products" && (
          <section>
            <h2>Product Catalog</h2>
            <p>Product cards with different states and interactive elements.</p>
            <div className="grid">
              {sampleProducts.map((product, index) => (
                <ProductCard key={product.id} product={product} />
              ))}
            </div>
          </section>
        )}

        {activeTab === "settings" && (
          <section>
            <h2>Settings</h2>
            <div className="card">
              <h3>Application Settings</h3>
              <form>
                <div>
                  <label htmlFor="theme">Theme:</label>
                  <select id="theme">
                    <option value="light">Light</option>
                    <option value="dark">Dark</option>
                  </select>
                </div>
                <div>
                  <label htmlFor="notifications">
                    <input type="checkbox" id="notifications" />
                    Enable notifications
                  </label>
                </div>
                <div>
                  <button type="submit" className="btn btn-primary">
                    Save Settings
                  </button>
                  <button type="button" className="btn btn-secondary">
                    Reset
                  </button>
                </div>
              </form>
            </div>
          </section>
        )}
      </main>

      <footer>
        <p>Built with Next.js + Auto TestId Plugin</p>
        <p>
          <small>
            Test IDs are automatically generated - no manual configuration
            needed!
          </small>
        </p>
      </footer>
    </div>
  );
}
